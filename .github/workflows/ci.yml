name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: chartboost/ruff-action@v1
  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Install dependencies
        run: |
          uv sync --extra dev
      - name: Check with mypy
        run: |
          uv run -m mypy .
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Install dependencies
        run: |
          uv sync --extra dev
      - name: Test with pytest
        run: |
          uv run -m pytest --cov-report html
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov
  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cyber-query-ai-frontend
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: cyber-query-ai-frontend/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run type checking
        run: npm run type-check
      - name: Run linting
        run: npm run lint:check
      - name: Run formatting check
        run: npm run format:check
      - name: Run tests
        run: npm run test
  version-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install Python dependencies
        run: |
          uv sync --extra dev
      - name: Check version consistency
        run: |
          echo "Checking version consistency across all package files..."

          PACKAGE_NAME="cyber-query-ai"
          TOML_VERSION=$(uv run python -c "import tomli; print(tomli.load(open('pyproject.toml', 'rb'))['project']['version'])")
          LOCK_VERSION=$(uv run python -c "import tomli; lock_data = tomli.load(open('uv.lock', 'rb')); pkg = next((p for p in lock_data['package'] if p['name'] == '${PACKAGE_NAME/_/-}'), None); print(pkg['version'] if pkg else 'not found')")
          FRONTEND_VERSION=$(node -p "require('./cyber-query-ai-frontend/package.json').version")

          echo "Version in pyproject.toml: $TOML_VERSION"
          echo "Version in uv.lock: $LOCK_VERSION"
          echo "Version in frontend/package.json: $FRONTEND_VERSION"

          if [ "$TOML_VERSION" != "$LOCK_VERSION" ]; then
            echo "ERROR: Python version mismatch!"
            echo "pyproject.toml has $TOML_VERSION but uv.lock has $LOCK_VERSION"
            exit 1
          fi

          if [ "$TOML_VERSION" != "$FRONTEND_VERSION" ]; then
            echo "ERROR: Frontend version mismatch!"
            echo "pyproject.toml has $TOML_VERSION but package.json has $FRONTEND_VERSION"
            echo "Please update cyber-query-ai-frontend/package.json version to match"
            exit 1
          fi

          echo "All versions match: $TOML_VERSION"
          echo "Version consistency check passed!"
