"use client";

import { Exploit } from "@/lib/types";

interface ExploitListProps {
  exploits: Exploit[];
  isLoading: boolean;
}

const getSeverityColor = (severity: string) => {
  switch (severity.toLowerCase()) {
    case "critical":
      return "text-red-500 border-red-500";
    case "high":
      return "text-orange-500 border-orange-500";
    case "medium":
      return "text-yellow-500 border-yellow-500";
    case "low":
      return "text-green-500 border-green-500";
    default:
      return "text-[var(--text-muted)] border-[var(--terminal-border)]";
  }
};

const ExploitList = ({ exploits, isLoading }: ExploitListProps) => {
  if (isLoading) {
    return (
      <div className="space-y-4">
        <h3 className="text-lg font-semibold text-[var(--text-primary)]">
          ðŸ“Ž Exploit References:
        </h3>
        <div className="terminal-border rounded-lg p-4 animate-pulse-neon">
          <span className="text-[var(--text-muted)]">
            Searching for exploits...
          </span>
        </div>
      </div>
    );
  }

  if (exploits.length === 0) {
    return (
      <div className="space-y-4">
        <h3 className="text-lg font-semibold text-[var(--text-primary)]">
          ðŸ“Ž Exploit References:
        </h3>
        <div className="terminal-border rounded-lg p-4">
          <span className="text-[var(--text-muted)]">
            No known exploits found for this target.
          </span>
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-4">
      <h3 className="text-lg font-semibold text-[var(--text-primary)]">
        ðŸ“Ž Exploit References:
      </h3>
      <div className="space-y-3">
        {exploits.map((exploit, index) => (
          <div
            key={index}
            className="terminal-border rounded-lg p-4 hover:bg-[var(--background-tertiary)] transition-colors"
          >
            <div className="flex items-start justify-between">
              <div className="flex-1">
                <h4 className="font-semibold text-[var(--text-primary)] mb-2">
                  {exploit.title}
                </h4>
                <p className="text-[var(--text-secondary)] text-sm mb-3">
                  {exploit.explanation}
                </p>
                {exploit.link && (
                  <a
                    href={exploit.link}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="text-[var(--border-accent)] hover:text-[var(--neon-cyan)]
                             text-sm underline break-all"
                  >
                    ðŸ”— View Details
                  </a>
                )}
              </div>
              <div
                className={`ml-4 px-2 py-1 rounded border text-xs font-medium ${getSeverityColor(
                  exploit.severity
                )}`}
              >
                {exploit.severity.toUpperCase()}
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default ExploitList;
